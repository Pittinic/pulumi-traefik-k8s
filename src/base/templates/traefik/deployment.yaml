resources:
  traefik-deployment:
    type: kubernetes:apps/v1:Deployment
    properties:
      metadata:
        namespace: ${namespace}
        name: ${traefik.service-name}
        labels:
          app: ${traefik.service-name}
      spec:
        replicas: ${traefik.replicas-nb}
        selector:
          matchLabels:
            app: ${traefik.service-name}
        template:
          metadata:
            labels:
              app: ${traefik.service-name}
          spec:
            serviceAccountName: ${traefik.service-account-name}
            containers:
              - name: traefik
                image: ${traefik.image}
                args:
                  - --providers.kubernetesingress=true
                  - --providers.kubernetesingress.allowEmptyServices=true
                  - --providers.kubernetesingress.namespaces=${namespace}
                  # expose dashboard
                  - --api.insecure=true
                  # logging
                  - --log.level=${traefik.logging.level}
                  - --log.format=${traefik.logging.format}
                  - --accesslog
                  - --api.debug=true
                  # letsencrypt resolver
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.tlschallenge=true
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.email=${acme.email}
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.storage=${acme.storage}
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.caserver=${acme.endpoint}
                  # entrypoints
                  - --entryPoints.${traefik.ports.http.name}.address=:${traefik.ports.http.targetPort}
                  - --entryPoints.${traefik.ports.https.name}.address=:${traefik.ports.https.targetPort}
#                  - --entryPoints.${traefik.ports.dashboard.name}.address=:${traefik.ports.dashboard.targetPort}
